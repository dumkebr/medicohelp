// @/components/TopControls.tsx
"use client";
import { useEffect, useState } from "react";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Separator } from "@/components/ui/separator";
import { useRouter } from "next/navigation";

type Tab = "clinico" | "evidencias" | "calculadoras";

export default function TopControls(props: {
  currentTitle?: string;                 // aparece “Novo atendimento”
  onSave?: () => void;                   // callback do botão Salvar
  initialTab?: Tab;                      // "clinico" | "evidencias" | "calculadoras"
  onTabChange?: (tab: Tab) => void;      // notifica troca de aba
  onOpenCalculator?: (id: string) => void; // opcional: se quiser controlar a abertura
}) {
  const {
    currentTitle = "Novo atendimento",
    onSave,
    initialTab = "clinico",
    onTabChange,
    onOpenCalculator,
  } = props;

  const [tab, setTab] = useState<Tab>(initialTab);
  const router = useRouter();

  useEffect(() => {
    setTab(initialTab);
  }, [initialTab]);

  function setTabAndNotify(next: Tab) {
    setTab(next);
    onTabChange?.(next);
  }

  // Ação para abrir a calculadora
  function openCalc(id: string) {
    if (onOpenCalculator) {
      onOpenCalculator(id);
      return;
    }
    // padrão: navega para rota /calculadoras/:id
    try {
      router.push(`/calculadoras/${id}`);
    } catch {
      console.log("Abrir calculadora:", id);
    }
  }

  return (
    <>
      {/* Linha do título + Salvar */}
      <div className="flex items-center justify-between gap-4">
        <div className="text-sm text-muted-foreground">{currentTitle}</div>
        <Button variant="outline" onClick={onSave}>Salvar</Button>
      </div>

      <Separator className="my-3" />

      {/* Botões principais (SEM logo / SEM “Beta Gratuito”) */}
      <div className="flex items-center gap-2">
        <Button
          variant={tab === "clinico" ? "default" : "outline"}
          onClick={() => setTabAndNotify("clinico")}
        >
          Clínico
        </Button>
        <Button
          variant={tab === "evidencias" ? "default" : "outline"}
          onClick={() => setTabAndNotify("evidencias")}
        >
          Explicação + Evidências
        </Button>
        <Button
          variant={tab === "calculadoras" ? "default" : "outline"}
          onClick={() => setTabAndNotify("calculadoras")}
        >
          Calculadoras
        </Button>
      </div>

      <Separator className="my-4" />

      {/* Conteúdo enxuto de cada aba */}
      {tab === "clinico" && (
        <div className="text-center text-sm text-muted-foreground py-10">
          Chat Médico com IA — digite sua pergunta clínica ou envie exames.
          <div className="text-xs mt-1">
            Os controles ficam fixos no topo. A conversa aqui é contínua.
          </div>
        </div>
      )}

      {tab === "evidencias" && (
        <Card className="p-4 text-sm text-muted-foreground">
          Coloque aqui o bloco de evidências/diretrizes (sumários, links, níveis de evidência).
        </Card>
      )}

      {tab === "calculadoras" && <CalculadorasList onOpen={openCalc} />}
    </>
  );
}

/** Lista de calculadoras — clica e navega para /calculadoras/:id */
function CalculadorasList({ onOpen }: { onOpen: (id: string) => void }) {
  const items = [
    { id: "wells", label: "Escore de Wells" },
    { id: "cockcroft", label: "Clearance de Creatinina (Cockcroft–Gault)" },
    { id: "cha2ds2vasc", label: "CHA₂DS₂-VASc" },
    { id: "meld", label: "MELD" },
    { id: "glasgow", label: "Escore de Glasgow" },
  ];

  return (
    <div className="space-y-3">
      <div>
        <div className="text-2xl font-semibold">Calculadoras</div>
        <div className="text-sm text-muted-foreground">
          Ferramentas de apoio à decisão clínica
        </div>
      </div>

      <Card className="divide-y">
        {items.map((it) => (
          <button
            key={it.id}
            onClick={() => onOpen(it.id)}
            className="w-full text-left px-4 py-3 hover:bg-muted/50 transition-colors"
          >
            <div className="text-sm">{it.label}</div>
          </button>
        ))}
      </Card>
    </div>
  );
}
