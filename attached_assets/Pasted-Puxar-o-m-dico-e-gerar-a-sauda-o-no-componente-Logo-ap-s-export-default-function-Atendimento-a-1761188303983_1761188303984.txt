Puxar o m√©dico e gerar a sauda√ß√£o no componente

Logo ap√≥s export default function Atendimento() { adicione:

const medico = useMemo<MedicoInfo>(() => getMedicoFromStorage(), []);
const saudacao = useMemo(() => buildSaudacao(medico), [medico]);


Fica assim no topo do componente:

export default function Atendimento() {
  const medico = useMemo<MedicoInfo>(() => getMedicoFromStorage(), []);
  const saudacao = useMemo(() => buildSaudacao(medico), [medico]);

  const [mode, setMode] = useState<Mode>("clinico");
  const [input, setInput] = useState("");
  const [messages, setMessages] = useState<Array<{ role: "user" | "assistant"; content: string }>>([]);
  const [onlineAI, setOnlineAI] = useState<boolean>(true);
  const inputRef = useRef<HTMLTextAreaElement | null>(null);

3) Garantir que TODA resposta comece com a sauda√ß√£o

Substitui tua handleSend pela vers√£o abaixo (mant√©m IA quando online; se cair, responde local ‚Äî sempre com a sauda√ß√£o):

const handleSend = useCallback(async () => {
  const text = input.trim();
  if (!text) return;

  const userMsg = { role: "user" as const, content: text };
  setMessages(prev => [...prev, userMsg]);
  setInput("");

  // 1) Resposta local no estilo cl√≠nico
  const localCore = mode === "clinico" ? routeCase(text) : (() => {
    const core = routeCase(text);
    return {
      title: core.title,
      body:
        core.body +
        "\n\n‚Äî Explica√ß√£o r√°pida: estou priorizando condutas que mudam desfecho imediato. Se quiser, eu detalho a fisiopatologia e trago refer√™ncias pontuais (Diretrizes SBC/ILAS/ANE etc.) de forma enxuta, sem texto de guideline engessado.",
    } as Reply;
  })();

  const localReplyWithGreeting = `**${saudacao}**\n\n${localCore.body}`;

  // 2) IA online ‚Üí reescreve mantendo sauda√ß√£o, formato e tom
  if (onlineAI) {
    try {
      const prompt = [
        `M√©dico logado: ${medico.nome}.`,
        `${saudacao}`,
        localCore.body,
        "",
        "REGRAS:",
        "- Mantenha EXATAMENTE a abertura de sauda√ß√£o acima.",
        "- Use o formato com as quatro se√ß√µes (üëâ Diagn√≥stico/‚ö° Conduta/üß™ Investiga√ß√£o/üí¨ Observa√ß√µes).",
        "- Linguagem direta de colega m√©dico brasileiro, tom cl√≠nico, sem floreio e sem copiar guideline.",
        "- Nunca invente sinais vitais; se faltarem dados essenciais, pe√ßa de forma objetiva.",
        "- Evite redund√¢ncia; foque no que muda conduta."
      ].join("\n");

      const aiOut = await callAIClairtonStyle(prompt);

      const out =
        aiOut.startsWith("Beleza,") || aiOut.includes(saudacao)
          ? aiOut
          : `**${saudacao}**\n\n${aiOut}`;

      setMessages(prev => [...prev, { role: "assistant", content: out }]);
      inputRef.current?.focus();
      return;
    } catch (e) {
      // fallback silencioso: resposta local
      setMessages(prev => [...prev, { role: "assistant", content: localReplyWithGreeting }]);
      inputRef.current?.focus();
      return;
    }
  }

  // 3) Offline: resposta local com sauda√ß√£o
  setMessages(prev => [...prev, { role: "assistant", content: localReplyWithGreeting }]);
  inputRef.current?.focus();
}, [input, mode, onlineAI, medico, saudacao]);

4) Placeholder com o nome do m√©dico

Ajusta o placeholder do <textarea>:

placeholder={`Fala comigo como no plant√£o, ${firstName(medico.nome)} (ex.: ‚ÄòIAM inferior com supra em D2, D3 e aVF, PA 90x60, FC 50‚Äô).`}

5) (Opcional) Setar o m√©dico no login

Quando fizer login/cadastro, salva no navegador:

localStorage.setItem("medicohelp_user", JSON.stringify({ nome: "Dr. Clairton" }));