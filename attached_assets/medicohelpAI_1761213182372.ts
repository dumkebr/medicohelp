// /lib/medicohelpAI.ts
// L√≥gica central do M√©dicoHelp (GPT-5) ‚Äî identidade, tom e modos.

import OpenAI from "openai";

export const client = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY!,
});

// ======= PROMPTS =======
const SYSTEM_PROMPT = `
Voc√™ √© o **M√©dicoHelp**, um assistente cl√≠nico m√©dico (estilo ChatGPT-5), destinado EXCLUSIVAMENTE a medicina.
Fale como um m√©dico experiente de pronto-socorro: direto, objetivo e humano, sem floreios. Valorize o tradicional.
Espelhe o estilo do usu√°rio: se ele usar CAIXA ALTA e abrevia√ß√µes (BEG, LOTE, MV+), mantenha. 

NUNCA troque os termos do m√©dico por outros "mais protocolares". Se ele disser "GRIPE", n√£o substitua por "s√≠ndrome gripal".
Se precisar acrescentar precis√£o, fa√ßa ap√≥s o termo original, entre par√™nteses.

Escopo: responda apenas sobre medicina (cl√≠nica, condutas, protocolos, interpreta√ß√£o de exames, CID, encaminhamentos, posologia).
Se o pedido n√£o for m√©dico, diga em UMA linha: "O M√©dicoHelp responde apenas sobre medicina."

Seguran√ßa/conduta:
- N√£o invente sinais vitais. Se forem necess√°rios, pe√ßa em UMA linha: "Doutor, me informe PA/FC/FR/Sat/T."
- D√™ prioridade a sinais de alarme, condutas imediatas e quando reavaliar/encaminhar.
- Doses pedi√°tricas em mg/kg com m√°ximos por dose/dia quando cr√≠tico.
- Se houver risco legal/√©tico, recomende avalia√ß√£o presencial quando indicado.

Estilo:
- Quando houver nome do m√©dico: comece com "Beleza, Doutor {{NOME_MEDICO}}. Vamos direto ao ponto:"
- Estruture quando fizer sentido: 
  üëâ Impress√£o/Diagn√≥stico
  ‚ö° Conduta imediata
  üîé Sinais de alerta
  üìá CID sugerido (se aplic√°vel)

Exemplo de tom (N√ÉO repita literalmente, apenas siga o estilo):
USU√ÅRIO: "MENOR COM GRIPE, CORIZA, TOSSE, FEBRE."
ASSISTENTE: "üëâ IMPRESS√ÉO: GRIPE (prov√°vel etiologia viral). ‚ö° CONDUTA: hidrata√ß√£o, paracetamol 10‚Äì15 mg/kg/dose 6/6h se febre, lavagem nasal. üîé ALERTAS: dispneia, febre >72h, recusa alimentar."
`;

const MODE_CLINICO = `
MODO: CL√çNICO.
Responda como colega de plant√£o, direto ao ponto. Forne√ßa impress√£o cl√≠nica, conduta com doses e sinais de alarme.
Se faltar dado essencial para decis√£o imediata, pe√ßa em UMA linha no topo.
`;

const MODE_EXPLICATIVO = `
MODO: EXPLICATIVO + EVID√äNCIAS.
Explique o racioc√≠nio de forma clara e breve. Mencione diretrizes de forma geral (ex.: AHA/ACC, IDSA, OMS, consensos pedi√°tricos) sem links.
`;

export type MedicoHelpMode = "clinico" | "explicativo";

export async function askMedicoHelp(
  userText: string,
  options: { mode: MedicoHelpMode; nomeMedico?: string } = { mode: "clinico" }
): Promise<string> {
  const nome = options.nomeMedico ?? "";
  const system = SYSTEM_PROMPT.replace("{{NOME_MEDICO}}", nome.toUpperCase());

  const modePrompt = options.mode === "clinico" ? MODE_CLINICO : MODE_EXPLICATIVO;

  // Bloqueio simples de escopo (somente texto m√©dico)
  const isMedical = /paciente|dor|febre|press[a√£]o|exame|conduta|diagn[o√≥]stico|cid|posologia|dose|sat|sintoma|gestante|trauma|asma|iam|avc|uti|antibi[o√≥]tico|analg[e√©]sico|pronto|plant[a√£]o/i.test(
    userText.toLowerCase()
  );

  const messages = [
    { role: "system", content: system },
    { role: "user", content: `NOME_MEDICO: ${nome}`.trim() },
    { role: "user", content: modePrompt },
    {
      role: "user",
      content: isMedical
        ? "Responda abaixo mantendo EXATAMENTE o estilo e os termos do usu√°rio."
        : "Se o texto a seguir n√£o for m√©dico, diga em UMA linha que o M√©dicoHelp responde apenas sobre medicina.",
    },
    { role: "user", content: userText },
  ] as const;

  const resp = await client.responses.create({
    model: "gpt-5",
    input: messages,
    temperature: 0.4,
    max_output_tokens: 900,
  });

  // Compatibilidade
  // @ts-ignore
  const out = (resp as any).output_text ?? JSON.stringify(resp);
  return String(out).trim();
}

// ===== Streaming (opcional) =====
// Retorna um AsyncGenerator de strings (chunks) para uso no endpoint.
export async function* streamMedicoHelp(
  userText: string,
  options: { mode: MedicoHelpMode; nomeMedico?: string } = { mode: "clinico" }
) {
  const nome = options.nomeMedico ?? "";
  const system = SYSTEM_PROMPT.replace("{{NOME_MEDICO}}", nome.toUpperCase());
  const modePrompt = options.mode === "clinico" ? MODE_CLINICO : MODE_EXPLICATIVO;

  const isMedical = /paciente|dor|febre|press[a√£]o|exame|conduta|diagn[o√≥]stico|cid|posologia|dose|sat|sintoma|gestante|trauma|asma|iam|avc|uti|antibi[o√≥]tico|analg[e√©]sico|pronto|plant[a√£]o/i.test(
    userText.toLowerCase()
  );

  const messages = [
    { role: "system", content: system },
    { role: "user", content: `NOME_MEDICO: ${nome}`.trim() },
    { role: "user", content: modePrompt },
    {
      role: "user",
      content: isMedical
        ? "Responda abaixo mantendo EXATAMENTE o estilo e os termos do usu√°rio."
        : "Se o texto a seguir n√£o for m√©dico, diga em UMA linha que o M√©dicoHelp responde apenas sobre medicina.",
    },
    { role: "user", content: userText },
  ] as const;

  const stream = await client.responses.stream({
    model: "gpt-5",
    input: messages,
    temperature: 0.4,
    max_output_tokens: 900,
  });

  // Emiss√£o incremental de texto
  let buffer = "";
  for await (const event of stream) {
    if (event.type === "response.output_text.delta") {
      buffer += event.delta;
      yield event.delta;
    }
  }
}
